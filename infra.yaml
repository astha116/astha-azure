# azure-pipelines.yml
trigger:
  branches:
    include:
      - main

pool:
  name: Default
  vmImage: 'ubuntu-latest'
variables:
  - group: terraform-vars
  
stages:
  - stage: Terraform
    displayName: 'Terraform Deploy'
    jobs:
      - job: Terraform
        displayName: 'Terraform Init, Plan & Apply'
        steps:

          # Install Terraform
          - task: TerraformInstaller@1
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.3.5'

          # Initialize Terraform with backend
          - task: TerraformTaskV4@4
            displayName: 'Terraform Init'
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: 'terraform-azure-conn'
              backendAzureRmResourceGroupName: 'astha-azure'
              backendAzureRmStorageAccountName: 'tfstate20055'
              backendAzureRmContainerName: 'tfstate'
              backendAzureRmKey: 'terraform.tfstate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
          - task: PowerShell@2
            displayName: "Export TF_VARs to auto.tfvars"
            inputs:
              targetType: 'inline'
              script: |
               Write-Host "Generating auto.tfvars file..."
               $vars = Get-ChildItem Env: | Where-Object { $_.Name -like "TF_VAR_*" }
               $output = ""
               foreach ($var in $vars) {
                $key = $var.Name.Substring(7) # Remove 'TF_VAR_' prefix
                $val = $var.Value
                $output += "$key = `"$val`"`n"
               }
               $output | Out-File -FilePath "terraform.auto.tfvars" -Encoding utf8
          # Plan
          - task: TerraformTaskV4@4
            displayName: 'Terraform Plan'
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              environmentServiceNameAzureRM: 'terraform-azure-conn'
              

          # Apply
          - task: TerraformTaskV4@4
            displayName: 'Terraform Apply'
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
              environmentServiceNameAzureRM: 'terraform-azure-conn'
              args: '-auto-approve'
